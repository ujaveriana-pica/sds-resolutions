/* ============================================================================
   This file contains the configurations for 
   Plugin settings
   ============================================================================
   
   Included from: "${rootProject.projectDir}/build.gradle"
   ============================================================================
 */

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

def jacocoExclude = ['**/Application*', '**/model/**', '**/crosscutting/**', '**/dataprovider/**', '**/configuration/**', '**/service/**']

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/jacoco")
        xml.destination file("${buildDir}/reports/jacoco/jacoco.xml")
    }
    afterEvaluate {
        getClassDirectories().setFrom(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExclude)
        })
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        getClassDirectories().setFrom(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExclude)
        })
    }

    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "ujaveriana-pica_sds-resolutions"
        property "sonar.organization", "ujaveriana-pica"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.verbose", "true"
        property "sonar.reportPath" , "${buildDir}/jacoco/test.exec"
        property 'sonar.language', 'java'
        property 'sonar.core.codeCoveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/jacoco.xml"
        property 'sonar.coverage.exclusions', jacocoExclude
    }
}

check.dependsOn jacocoTestCoverageVerification